extends ../layouts/layout

block content
    h1 Start
    p After installing you can use Sanelotto. For autodeploy Sanelotto must be installed on local machine and server.
    h2 Main commands
    ul.main_list
        li
            b='sanelotto help '
            | — a short list of commands.
        li
            b='sanelotto create [NAME] '
            | — create a project template with the specified name. You will need to edit configuration files.
        li
            b='sanelotto generate '
            | — Sanelotto asks you a few questions, and then created project based on your answers.
        li
            b='sanelotto start [TYPE] '
            | — start deploy. Detailed steps you can read below. Types:
            ul.secondary_list
                li
                    b local
                li
                    b server
        li
            b='sanelotto version '
            | — print current Sanelotto version.
        li
            b='sanelotto uninstall '
            | — delete Sanelotto.
    h2 How it works?
    p Sanelotto use two machine - local and server. Usually, local machine is a Continuous Integration virtual machine
        | or developer's personal computer. Server is a main platform for project - VPS, dedicated server or other. Local
        | machine gets signal from CI about updating repository on GitHub and deploy update application to server through
        | SSH connect.
        b=' All local changes will be removed during the update. '
        | Step-by-step:
    ol
        li As a result of an update Sanelotto run on local machine -
            span.code=' sanelotto start local'
        li
            b='If specified in the configuration. '
            | Local machine run predefined (before-type) commands.
        li Local machine connect to server through SSH-key or login/pass authentication.
        li Local machine start server part through
            span.code=' sanelotto start server '
            | and disconnect.
        ol
            li
                b='If project not exist on server. '
                ol
                    li Server download project from GitHub..
                    li
                        b='If specified in the configuration. '
                        | Server run first-type commands.
            li
                b='If project exist on server. '
                ol
                    li Server update project from GitHub.
                    li
                        b='If specified in the configuration. '
                        | Server run stop-type commands.
        li
            b='If specified in the configuration. '
            | Server replaces predefined files in project to other (
            a(href="/overwriting.html").inline_a overwriting
            | ).
        li Server starts the project (start-type commands).
    h2 Project on local and server
    p After creating new project through
        span.code=' sanelotto generate '
        | or
        span.code=' sanelotto create [NAME] '
        | you will have directory with project name and two directories inside:
        span.code=' Sanelotto_local '
        | and
        span.code=' Sanelotto_server'
        | . You need put
        span.code=' Sanelotto_server '
        | to you server and install Sanelotto to server if you have not done this before.
    p For start deploy you must start
        span.code=' sanelotto start local '
        | from directory with
        span.code=' Sanelotto_local '
        | , and in
        span.code=' Sanelotto_local/Sanelotto_local.json '
        | property 'server_dir' must be equal to the path to directory with
        span.code=' Sanelotto_server '
        | on server.
    h2 System commands
    p There are four types of system commands - before, first, start and stop. All commands a located in files with
        span.code=' .slfile '
        | extension. It are simple text files. Each line is a separate command, Example:
    h3 start.slfile
    article.many_code mkdir project_test
        | python3 preparation.py
        | python3 app.py &
    p Before-type executed on local before connect to server, first-type executed after first download project from GitHub,
        | stop-type executed after updating project from GitHub, start-type executed after downloading or updating from GitHub.
        | Any type of command can be disabled through configuration file.
    p All commands are executed one by one. Command starts only after execution of previous.
    p='Now you can move to '
        a(href="/config.html").inline_a Settings
        |  or
        a(href="/overwriting.html").inline_a Overwriting
        | .